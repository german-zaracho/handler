[
    {
        "title": "Favicons (Favorite icons)",
        "items": [
            "In the head of the index.html => &lt;link rel=\"shortcut icon\" href=\"assets/img/handler-icon.ico\" type=\"image/x-icon\"&gt;",
            "The .ico file preferably 64px by 64px"
        ],
        "tags": ["basic", "favicon", "icon"]
    },
    {
        "title": "Icons",
        "items": [
            "When you need to add icons -> &lt;link href='https://fonts.googleapis.com/icon?family=Material+Icons' rel='stylesheet'&gt;",
            "https://fonts.google.com/icons",
            "Then, for example -> &lt;span class='material-icons'&gt;thumb_up&lt;/span&gt; => üëç"
        ],
        "tags":["basic", "icon"]
    },
    {
        "title": "Greater and Less than",
        "items": [
            "\"<\" => & l t ; (But without spaces)",
            "\">\" => & g t ; (But without spaces)"
        ],
        "tags": ["basic"]
    },
    {
        "title": "Local server",
        "items": [
            "Being at the console",
            "If you have node.js installed => npm install -g http-server",
            "To check if you already have it installed => http-server --version",
            "Then from the project folder => http-server"
        ],
        "tags": ["basic", "server", "test", "terminal"]
    },
    {
        "title": "Cambiar cuenta de Github para subir cosas por terminal",
        "items": [
            "Panel de usuario",
            "Cuentas de usuario",
            "Administrador de credenciales",
            "Credenciales de windows",
            "Github",
            "Editar",
            "Luego ir al vsc y verificar la cuenta y mail",
            "git config --global user.name",
            "git config --global user.email",
            "Si se quiere modificar ->",
            "git config user.name 'Otro Nombre'",
            "git config user.email 'otra@email.com'",
            "Para verificar que la configuracion se aplico -> git config --list"
        ],
        "tags": ["github", "terminal"]
    },
    {
        "title": "Metodo .sort()",
        "items": [
            "Ordena strings en orden alfabetico, y numeros priorizando el valor de sus digitos comenzando desde el primero.",
            "Ej.1 -> const frutas = ['banana', 'manzana', 'kiwi', 'pera'];",
            "frutas.sort();",
            "console.log(frutas);",
            "Resultado: ['banana', 'kiwi', 'manzana', 'pera']",
            "Ej.2 -> const numeros = [10, 5, 20, 1];",
            "numeros.sort();",
            "console.log(numeros);",
            "Resultado: [1, 10, 20, 5]",
            "Ej.3 -> const numeros = [10, 5, 20, 1]; ",
            "numeros.sort((a, b) => a - b);",
            "console.log(numeros);",
            "Resultado: [1, 5, 10, 20]",
            "Ej.4 -> const numeros = [56, 48, 78, 15, 23, 31, 98, 12, 25, 125, 2058];",
            "const ordenado = numeros.sort();",
            "console.log(ordenado);",
            "Resultado: [12, 125, 15, 2058, 23, 25, 31, 48, 56, 78, 98]"
        ],
        "tags": ["js", "sort", "array", "method"]
    },
    {
        "title": "Como resetear archivos en el browser",
        "items": [
            "Al actualizar un archivo, a veces no se ve el cambio en el browser porque tiene los archivos en network",
            "F12 -> Network -> üõá -> click",
            "Refreshear la pagina"
        ],
        "tags": ["browser", "network", "files"]
    },
    {
        "title": "Imagenes en proyectos",
        "items": [
            "En la carpeta public/ -> imagenes estaticas como logo, iconos, imagenes de fondo.",
            "En la carpeta src/assets/ -> Imagenes que se van a importar en componentes o manipular con el codigo."
        ],
        "tags": ["basic", "images"]
    },
    {
        "title": "Atributo en enlaces <a> que utilizan target=\"_blank\"",
        "items": [
            "rel = \"noopener noreferrer\"",
            "noopener => Impide que la nueva pesta√±a tenga acceso a la pesta√±a de origen.",
            "noreferrer => Impide que la nueva pesta√±a tenga acceso a la pesta√±a de origen y no env√≠a la URL de la pesta√±a de origen como referencia."
        ],
        "tags": ["basic", "html", "a", "link"]
    },
    {
        "title": "Subir Proyecto a repositorio",
        "items": [
            "Si es con react hacer el repositorio sin el readme porque lleva a conflicto al hacer el merge",
            "git init",
            "git add .",
            "git commit -m \"First Commit\"",
            "git branch -M main",
            "git remote add origin https://github.com/mi-usuario/mi-proyecto.git",
            "si sale error => matar a la terminal y abrir una nueva",
            "git status",
            "git commit --amend",
            ":wq para guardar y salir",
            "git rebase --continue",
            "git push origin main"
        ],
        "tags": ["github", "terminal", "push", "project"]
    },
    {
        "title": "Para agregar variables al css",
        "items": [
            ":root{--nombre:0.5;}",
            "background-color: rgb(15 23 42 / var(--nombre));"
        ],
        "tags": ["css", "variables"]
    },
    {
        "title": "Ternario",
        "items": [
            "n % 2 == 0 ? 'par' : 'impar';"
        ],
        "tags": ["ternario", "js", "modulo", "operador" ]
    },
    {
        "title": "Ejemplo de Switch",
        "items": [
            "switch (L) {",
            "case 'a':",
            "case 'A':",
            "m += 'la primera vocal';",
            "break;",
            "case 'e':",
            "case 'E':",
            "m += 'la segunda vocal';",
            "break;",
            "// ...",
            "default:",
            "m += 'una consonante';}"
        ],
        "tags": ["switch", "js", "case", "default", "statement"]
    },
    {
        "title": "Bucles",
        "items": [
            "let i = 1;",
            "while (i < 5) {i++;}",
            "do {//accion} while (i = 'a');",
            "for (let i = 0; i < array.length; i++) {const element = array[i]; //acciones a repetir}",
            "Valor de inicio, condicion de corte, incremento o decremento"
        ],
        "tags": ["loop", "while", "do", "for"]
    },
    {
        "title": "isNaN()",
        "items": [
            "do {nombre = prompt('ingrese el nombre del alumno')} while (isNaN(nombre));",
            "isNaN() verifica si lo que se le pasa es un numero o no. Si es un numero devuelve false, si no lo es, tira true",
            "Tambien podes usar !isNaN() para que tire true si es un numero."
        ],
        "tags": ["isNaN()", "js", "number", "function"]
    },
    {
        "title": "toLowerCase, toUpperCase, charAt, slice",
        "items": [
            "nombre = nombre.toLowerCase(); -> pone todo en minusculas",
            "apellido = apellido.toUpperCase(); -> pone todo en mayusculas",
            "nombre = nombre.charAt(0).toUpperCase() + nombre.slice(1); -> pone la primera letra en mayuscula y el resto en minusculas"
        ],
        "tags": ["js", "string", "method"]
    },
    {
        "title": "slice()",
        "items": [
            "Copia una porcion del string o array y devuelve uno nuevo.",
            "Ej:1 -> const texto = 'javascript';",
            "const parte = texto.slice(4);",
            "console.log(parte); // 'script'",
            "Ej:2 -> const otraParte = texto.slice(0, 4);",
            "console.log(otraParte); // 'java'",
            "Ej:3 -> const frutas = ['manzana', 'banana', 'pera', 'uva'];",
            "const algunas = frutas.slice(1, 3);",
            "console.log(algunas); // ['banana', 'pera']"
        ],
        "tags": ["js", "slice", "string", "array", "method"]
    },
    {
        "title": "Call a function",
        "items": [
            "Ejemplo 1:",
            "Html -> <button onclick='unaFuncion();'>click</button>",
            "js -> function unaFuncion() {document.write('¬°Hola mundo!');}",
            "Ejemplo 2:",
            "Html -> <button id='miBoton'>click</button>",
            "js -> const boton = document.getElementById('miBoton');",
            "boton.addEventListener('click', function () {document.write('¬°Hola desde addEventListener!');});"
        ],
        "tags": ["js", "function", "onclick", "html"]
    },
    {
        "title": "Propiedad Length",
        "items": [
            "Ej:1 -> const palabra = 'Javascript';",
            "console.log(palabra.length); // 10",
            "Ej: 2 -> const frutas = ['manzana', 'banana', 'pera'];",
            "console.log(frutas.length); // 3"
        ],
        "tags": ["length", "js", "string", "array", "property"]
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    },
    {
        "title": "",
        "items": [],
        "tags": []
    }
]